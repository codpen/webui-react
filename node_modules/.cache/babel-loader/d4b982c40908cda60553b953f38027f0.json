{"ast":null,"code":"import _defineProperty from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport axiosInstance from \"../utils/API\";\nimport { GET_CONFIG_FOR_REMOTE, GET_REMOTE_LIST, REQUEST_ERROR, REQUEST_SUCCESS } from \"./types\";\nexport var getConfigForRemote = function getConfigForRemote(remoteName) {\n  return function (dispatch) {\n    axiosInstance.post(\"operations/fsinfo\", {\n      fs: remoteName\n    }).then(function (res) {\n      return dispatch({\n        type: GET_CONFIG_FOR_REMOTE,\n        status: REQUEST_SUCCESS,\n        payload: _defineProperty({}, remoteName, res.data)\n      });\n    }, function (error) {\n      return dispatch({\n        type: GET_CONFIG_FOR_REMOTE,\n        status: REQUEST_ERROR,\n        payload: error\n      });\n    });\n  };\n};\nexport var getRemoteNames = function getRemoteNames() {\n  return function (dispatch) {\n    axiosInstance.post(\"config/listremotes\").then(function (res) {\n      return dispatch({\n        type: GET_REMOTE_LIST,\n        status: REQUEST_SUCCESS,\n        payload: res.data.remotes\n      });\n    }, function (error) {\n      return dispatch({\n        type: GET_REMOTE_LIST,\n        status: REQUEST_ERROR,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/workspace/rclone-webui-react/src/actions/explorerActions.js"],"names":["axiosInstance","GET_CONFIG_FOR_REMOTE","GET_REMOTE_LIST","REQUEST_ERROR","REQUEST_SUCCESS","getConfigForRemote","remoteName","dispatch","post","fs","then","res","type","status","payload","data","error","getRemoteNames","remotes"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,cAA1B;AACA,SAAQC,qBAAR,EAA+BC,eAA/B,EAAgDC,aAAhD,EAA+DC,eAA/D,QAAqF,SAArF;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,UAAD;AAAA,SAAgB,UAAAC,QAAQ,EAAI;AAC1DP,IAAAA,aAAa,CAACQ,IAAd,CAAmB,mBAAnB,EAAwC;AAACC,MAAAA,EAAE,EAAEH;AAAL,KAAxC,EACKI,IADL,CACU,UAACC,GAAD;AAAA,aAASJ,QAAQ,CAAC;AAChBK,QAAAA,IAAI,EAAEX,qBADU;AAEhBY,QAAAA,MAAM,EAAET,eAFQ;AAGhBU,QAAAA,OAAO,sBAAIR,UAAJ,EAAiBK,GAAG,CAACI,IAArB;AAHS,OAAD,CAAjB;AAAA,KADV,EAOQ,UAAAC,KAAK;AAAA,aAAIT,QAAQ,CAAC;AACdK,QAAAA,IAAI,EAAEX,qBADQ;AAEdY,QAAAA,MAAM,EAAEV,aAFM;AAGdW,QAAAA,OAAO,EAAEE;AAHK,OAAD,CAAZ;AAAA,KAPb;AAYH,GAbiC;AAAA,CAA3B;AAeP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,UAAAV,QAAQ,EAAI;AAC5CP,IAAAA,aAAa,CAACQ,IAAd,CAAmB,oBAAnB,EAAyCE,IAAzC,CAA8C,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAAC;AAC1DK,QAAAA,IAAI,EAAEV,eADoD;AAE1DW,QAAAA,MAAM,EAAET,eAFkD;AAG1DU,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASG;AAHwC,OAAD,CAAZ;AAAA,KAAjD,EAII,UAAAF,KAAK;AAAA,aAAIT,QAAQ,CAAC;AAClBK,QAAAA,IAAI,EAAEV,eADY;AAElBW,QAAAA,MAAM,EAAEV,aAFU;AAGlBW,QAAAA,OAAO,EAAEE;AAHS,OAAD,CAAZ;AAAA,KAJT;AASH,GAV6B;AAAA,CAAvB","sourcesContent":["import axiosInstance from \"../utils/API\";\nimport {GET_CONFIG_FOR_REMOTE, GET_REMOTE_LIST, REQUEST_ERROR, REQUEST_SUCCESS} from \"./types\";\n\nexport const getConfigForRemote = (remoteName) => dispatch => {\n    axiosInstance.post(\"operations/fsinfo\", {fs: remoteName})\n        .then((res) => dispatch({\n                type: GET_CONFIG_FOR_REMOTE,\n                status: REQUEST_SUCCESS,\n                payload: {[remoteName]: res.data},\n\n            }),\n            error => dispatch({\n                type: GET_CONFIG_FOR_REMOTE,\n                status: REQUEST_ERROR,\n                payload: error\n            }))\n};\n\nexport const getRemoteNames = () => dispatch => {\n    axiosInstance.post(\"config/listremotes\").then(res => dispatch({\n        type: GET_REMOTE_LIST,\n        status: REQUEST_SUCCESS,\n        payload: res.data.remotes\n    }), error => dispatch({\n        type: GET_REMOTE_LIST,\n        status: REQUEST_ERROR,\n        payload: error\n    }))\n};\n\n"]},"metadata":{},"sourceType":"module"}