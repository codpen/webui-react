{"ast":null,"code":"import _regeneratorRuntime from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/workspace/rclone-webui-react/src/views/FilesView/FilesView.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axiosInstance from \"../../utils/API\";\nimport { Alert, Col, Table } from \"reactstrap\";\nimport \"../../utils/Global\";\nimport FileOperations from \"../Base/NewFolder/FileOperations\";\nimport { DropTarget } from \"react-dnd\";\nimport FileComponent from \"./FileComponent\";\nimport { ItemTypes } from \"./Constants\";\nimport { toast } from \"react-toastify\";\nimport { addColonAtLast } from \"../../utils/Tools\";\nimport RemoteExplorerContext from \"../RemoteExplorer/RemoteExplorerContext\";\nvar propTypes = {\n  updateRemotePathHandle: PropTypes.func.isRequired,\n  upButtonHandle: PropTypes.func.isRequired,\n  remotePath: PropTypes.string.isRequired\n};\nvar defaultProps = {\n  remotePath: \"\"\n};\n/*\n* Start code for react DND\n* */\n\nvar filesTarget = {\n  drop: function drop(props, monitor, component) {\n    if (monitor.didDrop()) return;\n    console.log(\"drop\", props, monitor, monitor.getItem(), component);\n\n    var _monitor$getItem = monitor.getItem(),\n        Name = _monitor$getItem.Name,\n        Path = _monitor$getItem.Path,\n        IsDir = _monitor$getItem.IsDir,\n        remoteName = _monitor$getItem.remoteName;\n\n    var srcRemoteName = addColonAtLast(remoteName);\n    var srcRemotePath = Path;\n    var destRemoteName = addColonAtLast(props.remoteName);\n    var destRemotePath = props.remotePath;\n    return {\n      srcRemoteName: srcRemoteName,\n      srcRemotePath: srcRemotePath,\n      destRemoteName: destRemoteName,\n      destRemotePath: destRemotePath,\n      Name: Name,\n      IsDir: IsDir,\n      updateHandler: component.updateHandler\n    };\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  };\n}\n\nfunction renderOverlay() {\n  return React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      zIndex: 1,\n      opacity: 0.5,\n      backgroundColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n}\n/*\n* END code for react DND\n* */\n\n\nfunction UpButtonComponent(_ref) {\n  var upButtonHandle = _ref.upButtonHandle;\n  return React.createElement(\"tr\", {\n    onClick: function onClick() {\n      return upButtonHandle();\n    },\n    className: \"pointer-cursor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-file-o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), \" Go Up...\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n}\n\nvar FilesView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilesView, _React$Component);\n\n  function FilesView(props) {\n    var _this;\n\n    _classCallCheck(this, FilesView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilesView).call(this, props));\n\n    _this.updateHandler = function () {\n      _this.setState(function (prevState) {\n        return {\n          shouldUpdate: !prevState.shouldUpdate\n        };\n      });\n    };\n\n    _this.dismissAlert = function (e) {\n      _this.setState({\n        isDownloadProgress: false\n      });\n    };\n\n    _this.getFileComponents = function (filesList, remoteName, isDir) {\n      return filesList.map(function (item, idx) {\n        var ID = item.ID,\n            Name = item.Name; // Using fallback as fileName when the ID is not available (for local file system)\n\n        if (ID === undefined) {\n          ID = Name;\n        }\n\n        if (item.IsDir === isDir) {\n          return React.createElement(React.Fragment, {\n            key: ID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273\n            },\n            __self: this\n          }, React.createElement(FileComponent, {\n            item: item,\n            clickHandler: _this.handleFileClick,\n            downloadHandle: _this.downloadHandle,\n            deleteHandle: _this.deleteHandle,\n            remoteName: remoteName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }));\n        }\n\n        return null;\n      });\n    };\n\n    _this.state = {\n      filesList: [],\n      isLoading: false,\n      isDownloadProgress: false,\n      downloadingItems: 0,\n      isOperationInProgress: false,\n      shouldUpdate: true\n    };\n    _this.handleFileClick = _this.handleFileClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.downloadHandle = _this.downloadHandle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteHandle = _this.deleteHandle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FilesView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getFilesList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this$props = this.props,\n          remoteName = _this$props.remoteName,\n          remotePath = _this$props.remotePath;\n      var shouldUpdate = this.state.shouldUpdate; // console.log(\"componentDidUpdate\");\n\n      if (prevProps.remoteName !== remoteName || prevProps.remotePath !== remotePath || prevState.shouldUpdate !== shouldUpdate) {\n        this.getFilesList(prevState.shouldUpdate === shouldUpdate);\n      }\n    }\n  }, {\n    key: \"handleFileClick\",\n    value: function handleFileClick(e, item) {\n      var Path = item.Path,\n          IsDir = item.IsDir,\n          IsBucket = item.IsBucket;\n      var updateRemotePathHandle = this.props.updateRemotePathHandle;\n      console.log(\"Clicked\" + Path);\n\n      if (IsDir || IsBucket) {\n        updateRemotePathHandle(Path, IsDir, IsBucket);\n      } else {\n        this.downloadHandle(item);\n      }\n    }\n  }, {\n    key: \"getFilesList\",\n    value: function () {\n      var _getFilesList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var showLoading,\n            _this$props2,\n            remoteName,\n            remotePath,\n            data,\n            res,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                showLoading = _args.length > 0 && _args[0] !== undefined ? _args[0] : true;\n                _this$props2 = this.props, remoteName = _this$props2.remoteName, remotePath = _this$props2.remotePath;\n\n                if (!(remoteName !== \"\")) {\n                  _context.next = 20;\n                  break;\n                }\n\n                console.log(remoteName, remotePath);\n                remoteName = addColonAtLast(remoteName);\n                data = {\n                  fs: remoteName,\n                  remote: remotePath\n                };\n                if (showLoading) this.setState({\n                  isLoading: true\n                });\n                _context.prev = 7;\n                _context.next = 10;\n                return axiosInstance.post(\"/operations/list\", data);\n\n              case 10:\n                res = _context.sent;\n                this.setState({\n                  filesList: res.data.list\n                });\n                _context.next = 19;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](7);\n                console.log(\"Error loading files\");\n                toast.warn('Error loading files'); // Pop current state\n\n                this.props.upButtonHandle();\n\n              case 19:\n                if (showLoading) this.setState({\n                  isLoading: false\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 14]]);\n      }));\n\n      function getFilesList() {\n        return _getFilesList.apply(this, arguments);\n      }\n\n      return getFilesList;\n    }()\n  }, {\n    key: \"downloadHandle\",\n    value: function () {\n      var _downloadHandle = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(item) {\n        var _this2 = this;\n\n        var _this$context, remoteName, remotePath, fsInfo, downloadUrl, response, url, link;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // let {remoteName, remotePath} = this.props;\n                _this$context = this.context, remoteName = _this$context.remoteName, remotePath = _this$context.remotePath, fsInfo = _this$context.fsInfo;\n                downloadUrl = \"\";\n\n                if (fsInfo.Features.BucketBased) {\n                  downloadUrl = \"/[\".concat(remoteName, \"]/\").concat(remotePath, \"/\").concat(item.Name);\n                } else {\n                  downloadUrl = \"/[\".concat(remoteName, \":\").concat(remotePath, \"]/\").concat(item.Name);\n                } // openInNewTab(downloadUrl);\n\n\n                this.setState(function (prevState) {\n                  return {\n                    downloadingItems: prevState.downloadingItems + 1,\n                    isDownloadProgress: true\n                  };\n                });\n                _context2.next = 6;\n                return axiosInstance({\n                  url: downloadUrl,\n                  method: 'GET',\n                  responseType: 'blob'\n                });\n\n              case 6:\n                response = _context2.sent;\n                url = window.URL.createObjectURL(new Blob([response.data]));\n                link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', item.Name);\n                document.body.appendChild(link);\n                link.click();\n                this.setState(function (prevState) {\n                  return {\n                    downloadingItems: prevState.downloadingItems - 1\n                  };\n                }, function () {\n                  if (_this2.state.downloadingItems === 0) {\n                    _this2.setState({\n                      isDownloadProgress: false\n                    });\n                  }\n                });\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function downloadHandle(_x) {\n        return _downloadHandle.apply(this, arguments);\n      }\n\n      return downloadHandle;\n    }()\n  }, {\n    key: \"deleteHandle\",\n    value: function () {\n      var _deleteHandle = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(item) {\n        var remoteName, data, res, _res;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(\"Delete pressed\");\n                remoteName = this.props.remoteName;\n                data = {\n                  fs: addColonAtLast(remoteName),\n                  remote: item.Path\n                };\n                _context3.prev = 3;\n\n                if (!item.IsDir) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                _context3.next = 7;\n                return axiosInstance.post(\"/operations/purge\", data);\n\n              case 7:\n                res = _context3.sent;\n                console.log(\"deletefile\", res);\n                this.updateHandler();\n                toast.info(\"\".concat(item.Name, \" deleted.\"));\n                _context3.next = 19;\n                break;\n\n              case 13:\n                _context3.next = 15;\n                return axiosInstance.post(\"/operations/deletefile\", data);\n\n              case 15:\n                _res = _context3.sent;\n                console.log(\"deletefile\", _res);\n                this.updateHandler();\n                toast.info(\"\".concat(item.Name, \" deleted.\"), {\n                  autoClose: false\n                });\n\n              case 19:\n                _context3.next = 25;\n                break;\n\n              case 21:\n                _context3.prev = 21;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.log(\"Error in deleting file\");\n                toast.error(\"Error deleting file. \".concat(_context3.t0), {\n                  autoClose: false\n                });\n\n              case 25:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[3, 21]]);\n      }));\n\n      function deleteHandle(_x2) {\n        return _deleteHandle.apply(this, arguments);\n      }\n\n      return deleteHandle;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          isDownloadProgress = _this$state.isDownloadProgress,\n          downloadingItems = _this$state.downloadingItems,\n          isOperationInProgress = _this$state.isOperationInProgress;\n      var _this$props3 = this.props,\n          connectDropTarget = _this$props3.connectDropTarget,\n          isOver = _this$props3.isOver,\n          upButtonHandle = _this$props3.upButtonHandle,\n          remoteName = _this$props3.remoteName;\n\n      if (isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-circle-o-notch fa-lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }), \" Loading\");\n      } else {\n        var filesList = this.state.filesList;\n\n        if (remoteName === \"\") {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295\n            },\n            __self: this\n          }, \"No remote is selected. Select a remote from above to show files.\");\n        }\n\n        console.log(\"filesList\", filesList);\n        var dirComponentMap = this.getFileComponents(filesList, remoteName, true);\n        var fileComponentMap = this.getFileComponents(filesList, remoteName, false);\n        var renderElement = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, \"Directories\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        })), dirComponentMap, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, \"Files\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        })), fileComponentMap);\n        return connectDropTarget(React.createElement(\"div\", {\n          className: \"col-12\",\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, isOver && renderOverlay(), React.createElement(Alert, {\n          color: \"info\",\n          isOpen: isDownloadProgress,\n          toggle: this.dismissAlert,\n          sm: 12,\n          lg: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, \"Downloading \", downloadingItems, \" file(s). Please wait.\"), React.createElement(Col, {\n          sm: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, React.createElement(FileOperations, {\n          updateHandler: this.updateHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        })), React.createElement(Table, {\n          sm: 12,\n          lg: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, \"Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, \"Size\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, \"Modified\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, \"Actions\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, React.createElement(UpButtonComponent, {\n          upButtonHandle: upButtonHandle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }), filesList.length > 0 ? renderElement : React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, \"No files\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }))))));\n      }\n    }\n  }]);\n\n  return FilesView;\n}(React.Component);\n\nFilesView.contextType = RemoteExplorerContext;\nFilesView.propTypes = propTypes;\nFilesView.defaultProps = defaultProps;\nexport default DropTarget(ItemTypes.FILECOMPONENT, filesTarget, collect)(FilesView);","map":{"version":3,"sources":["/workspace/rclone-webui-react/src/views/FilesView/FilesView.js"],"names":["React","PropTypes","axiosInstance","Alert","Col","Table","FileOperations","DropTarget","FileComponent","ItemTypes","toast","addColonAtLast","RemoteExplorerContext","propTypes","updateRemotePathHandle","func","isRequired","upButtonHandle","remotePath","string","defaultProps","filesTarget","drop","props","monitor","component","didDrop","console","log","getItem","Name","Path","IsDir","remoteName","srcRemoteName","srcRemotePath","destRemoteName","destRemotePath","updateHandler","collect","connect","connectDropTarget","dropTarget","isOver","renderOverlay","position","top","left","height","width","zIndex","opacity","backgroundColor","UpButtonComponent","FilesView","setState","prevState","shouldUpdate","dismissAlert","e","isDownloadProgress","getFileComponents","filesList","isDir","map","item","idx","ID","undefined","handleFileClick","downloadHandle","deleteHandle","state","isLoading","downloadingItems","isOperationInProgress","bind","getFilesList","prevProps","snapshot","IsBucket","showLoading","data","fs","remote","post","res","list","warn","context","fsInfo","downloadUrl","Features","BucketBased","url","method","responseType","response","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","info","autoClose","error","dirComponentMap","fileComponentMap","renderElement","length","Component","contextType","FILECOMPONENT"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axiosInstance from \"../../utils/API\";\nimport {Alert, Col, Table} from \"reactstrap\";\nimport \"../../utils/Global\";\nimport FileOperations from \"../Base/NewFolder/FileOperations\";\nimport {DropTarget} from \"react-dnd\";\nimport FileComponent from \"./FileComponent\";\nimport {ItemTypes} from \"./Constants\";\nimport {toast} from \"react-toastify\";\nimport {addColonAtLast} from \"../../utils/Tools\";\nimport RemoteExplorerContext from \"../RemoteExplorer/RemoteExplorerContext\";\n\n\nconst propTypes = {\n    updateRemotePathHandle: PropTypes.func.isRequired,\n    upButtonHandle: PropTypes.func.isRequired,\n    remotePath: PropTypes.string.isRequired\n};\n\nconst defaultProps = {\n    remotePath: \"\",\n};\n\n\n\n/*\n* Start code for react DND\n* */\n\nconst filesTarget = {\n    drop(props, monitor, component) {\n        if (monitor.didDrop()) return;\n        console.log(\"drop\", props, monitor, monitor.getItem(), component);\n\n        let {Name, Path, IsDir, remoteName} = monitor.getItem();\n\n        let srcRemoteName = addColonAtLast(remoteName);\n        let srcRemotePath = Path;\n        let destRemoteName = addColonAtLast(props.remoteName);\n        let destRemotePath = props.remotePath;\n\n        return {\n            srcRemoteName,\n            srcRemotePath,\n            destRemoteName,\n            destRemotePath,\n            Name,\n            IsDir,\n            updateHandler: component.updateHandler\n        }\n\n    }\n};\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver()\n    }\n}\n\nfunction renderOverlay() {\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                height: '100%',\n                width: '100%',\n                zIndex: 1,\n                opacity: 0.5,\n                backgroundColor: 'gray',\n            }}\n        />\n    );\n}\n\n/*\n* END code for react DND\n* */\n\nfunction UpButtonComponent({upButtonHandle}) {\n    return (\n        <tr onClick={() => upButtonHandle()} className={\"pointer-cursor\"}>\n            <td></td>\n            <td><i className={\"fa fa-file-o\"}/> Go Up...</td>\n            <td></td>\n            <td></td>\n            <td></td>\n        </tr>);\n}\n\nclass FilesView extends React.Component {\n    static contextType = RemoteExplorerContext;\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filesList: [],\n            isLoading: false,\n            isDownloadProgress: false,\n            downloadingItems: 0,\n            isOperationInProgress: false,\n            shouldUpdate: true,\n\n        };\n        this.handleFileClick = this.handleFileClick.bind(this);\n        this.downloadHandle = this.downloadHandle.bind(this);\n        this.deleteHandle = this.deleteHandle.bind(this);\n    }\n\n    componentDidMount() {\n        this.getFilesList();\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {remoteName, remotePath} = this.props;\n        const {shouldUpdate} = this.state;\n        // console.log(\"componentDidUpdate\");\n        if (prevProps.remoteName !== remoteName || prevProps.remotePath !== remotePath || prevState.shouldUpdate !== shouldUpdate) {\n            this.getFilesList(prevState.shouldUpdate === shouldUpdate);\n        }\n    }\n\n    handleFileClick(e, item) {\n        const {Path, IsDir, IsBucket} = item;\n        const {updateRemotePathHandle} = this.props;\n        console.log(\"Clicked\" + Path);\n        if (IsDir || IsBucket) {\n            updateRemotePathHandle(Path, IsDir, IsBucket);\n        } else {\n            this.downloadHandle(item);\n        }\n\n    }\n\n\n    async getFilesList(showLoading = true) {\n        let {remoteName, remotePath} = this.props;\n\n        if (remoteName !== \"\") {\n\n            console.log(remoteName, remotePath);\n\n            remoteName = addColonAtLast(remoteName);\n\n\n            let data = {\n                fs: remoteName,\n                remote: remotePath\n            };\n            if (showLoading)\n                this.setState({isLoading: true});\n\n            try {\n\n                let res = await axiosInstance.post(\"/operations/list\", data);\n                this.setState({filesList: res.data.list});\n            } catch (e) {\n                console.log(\"Error loading files\");\n                toast.warn('Error loading files');\n                // Pop current state\n                this.props.upButtonHandle();\n            }\n\n            if (showLoading)\n                this.setState({isLoading: false});\n        }\n    }\n\n    async downloadHandle(item) {\n        // let {remoteName, remotePath} = this.props;\n        let {remoteName, remotePath, fsInfo} = this.context;\n        let downloadUrl = \"\"\n        if (fsInfo.Features.BucketBased) {\n            downloadUrl = `/[${remoteName}]/${remotePath}/${item.Name}`;\n\n        } else {\n            downloadUrl = `/[${remoteName}:${remotePath}]/${item.Name}`;\n        }\n        // openInNewTab(downloadUrl);\n\n        this.setState((prevState) => {\n            return {\n                downloadingItems: prevState.downloadingItems + 1,\n                isDownloadProgress: true\n            };\n        });\n\n        let response = await axiosInstance({\n            url: downloadUrl,\n            method: 'GET',\n            responseType: 'blob',\n        });\n\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', item.Name);\n        document.body.appendChild(link);\n        link.click();\n\n        this.setState((prevState) => {\n            return {\n                downloadingItems: prevState.downloadingItems - 1,\n            };\n        }, () => {\n            if (this.state.downloadingItems === 0) {\n                this.setState({isDownloadProgress: false})\n            }\n        });\n    }\n\n    async deleteHandle(item) {\n        console.log(\"Delete pressed\");\n        let {remoteName} = this.props;\n\n        const data = {\n            fs: addColonAtLast(remoteName),\n            remote: item.Path,\n        };\n        try {\n            if (item.IsDir) {\n\n                let res = await axiosInstance.post(\"/operations/purge\", data);\n                console.log(\"deletefile\", res);\n\n                this.updateHandler();\n                toast.info(`${item.Name} deleted.`);\n\n            } else {\n\n                let res = await axiosInstance.post(\"/operations/deletefile\", data);\n                console.log(\"deletefile\", res);\n                this.updateHandler();\n                toast.info(`${item.Name} deleted.`, {\n                    autoClose: false\n                });\n            }\n        } catch (e) {\n            console.log(`Error in deleting file`);\n            toast.error(`Error deleting file. ${e}`, {\n                autoClose: false\n            });\n        }\n\n    }\n\n    updateHandler = () => {\n        this.setState((prevState) => {\n            return {shouldUpdate: !prevState.shouldUpdate}\n        })\n\n    }\n\n    dismissAlert = (e) => {\n        this.setState({isDownloadProgress: false});\n    };\n\n    getFileComponents = (filesList, remoteName, isDir) => {\n        return filesList.map((item, idx) => {\n            let {ID, Name} = item;\n            // Using fallback as fileName when the ID is not available (for local file system)\n            if (ID === undefined) {\n                ID = Name;\n            }\n            if (item.IsDir === isDir) {\n                return (\n                    <React.Fragment key={ID}>\n                        <FileComponent item={item} clickHandler={this.handleFileClick}\n                                       downloadHandle={this.downloadHandle} deleteHandle={this.deleteHandle}\n                                       remoteName={remoteName}/>\n                    </React.Fragment>\n                )\n            }\n            return null;\n        });\n    }\n\n\n    render() {\n        const {isLoading, isDownloadProgress, downloadingItems, isOperationInProgress} = this.state;\n        const {connectDropTarget, isOver, upButtonHandle, remoteName} = this.props;\n\n        if (isLoading) {\n            return (<div><i className={\"fa fa-circle-o-notch fa-lg\"}/> Loading</div>);\n        } else {\n\n            const {filesList} = this.state;\n            if (remoteName === \"\") {\n                return (<div>No remote is selected. Select a remote from above to show files.</div>);\n            }\n\n            console.log(\"filesList\", filesList);\n\n\n            let dirComponentMap = this.getFileComponents(filesList, remoteName, true);\n\n            let fileComponentMap = this.getFileComponents(filesList, remoteName, false);\n\n            const renderElement = (\n\n\n                <React.Fragment>\n                    <tr>\n                        <td></td>\n                        <th>Directories</th>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                    {dirComponentMap}\n                    <tr>\n                        <td></td>\n                        <th>Files</th>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                    {fileComponentMap}\n                </React.Fragment>\n\n            );\n\n\n            return connectDropTarget(\n                <div className={\"col-12\"} style={{height: \"100%\"}}>\n                    {isOver && renderOverlay()}\n\n                    <Alert color=\"info\" isOpen={isDownloadProgress} toggle={this.dismissAlert} sm={12}\n                           lg={12}>\n                        Downloading {downloadingItems} file(s). Please wait.\n                    </Alert>\n\n                    <Col sm={12}>\n                        <FileOperations updateHandler={this.updateHandler}/>\n                    </Col>\n\n\n                    <Table sm={12} lg={12}>\n                        <thead>\n                        <tr>\n                            <th></th>\n                            <th>Name</th>\n                            <th>Size</th>\n                            <th>Modified</th>\n                            <th>Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <UpButtonComponent upButtonHandle={upButtonHandle}/>\n                        {filesList.length > 0 ? renderElement :\n                            <tr>\n                                <td></td>\n                                <td>No files</td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                            </tr>\n                        }\n                        </tbody>\n                    </Table>\n                </div>\n            );\n        }\n    }\n\n}\n\nFilesView.propTypes = propTypes;\nFilesView.defaultProps = defaultProps;\n\nexport default DropTarget(ItemTypes.FILECOMPONENT, filesTarget, collect)(FilesView);\n"]},"metadata":{},"sourceType":"module"}