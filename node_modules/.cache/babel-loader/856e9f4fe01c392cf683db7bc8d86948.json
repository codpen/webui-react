{"ast":null,"code":"import _classCallCheck from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"/workspace/rclone-webui-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/workspace/rclone-webui-react/src/views/ShowConfig/ShowConfig.js\";\nimport React from \"react\";\nimport { Button, Col, Row, Table } from \"reactstrap\";\nimport ConfigRow from \"./ConfigRow\";\nimport { connect } from \"react-redux\";\nimport { getConfigDump } from \"../../actions/configActions\";\n\nfunction RemoteRows(_ref) {\n  var remotes = _ref.remotes,\n      refreshHandle = _ref.refreshHandle;\n  var returnMap = [];\n  var curKey = 1;\n\n  for (var _i = 0, _Object$entries = Object.entries(remotes); _i < _Object$entries.length; _i++) {\n    var _ref4 = _Object$entries[_i];\n\n    var _ref3 = _slicedToArray(_ref4, 2);\n\n    var key = _ref3[0];\n    var value = _ref3[1];\n    returnMap.push(React.createElement(ConfigRow, {\n      sequenceNumber: curKey,\n      key: key,\n      remoteName: key,\n      remote: value,\n      refreshHandle: refreshHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }));\n    curKey++;\n  }\n\n  return returnMap;\n}\n\nvar ShowConfig =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ShowConfig, _React$PureComponent);\n\n  function ShowConfig() {\n    _classCallCheck(this, ShowConfig);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShowConfig).apply(this, arguments));\n  }\n\n  _createClass(ShowConfig, [{\n    key: \"componentDidMount\",\n    // async loadConfigDump() {\n    //     try {\n    //         let res = await axiosInstance.post(\"config/dump\");\n    //         this.setState({remotes: res.data});\n    //     } catch (e) {\n    //         console.log(`Error while processing request to get remote list ${e}`);\n    //         toast.error(`Error loading remotes list. ${e}`, {\n    //             autoClose: false\n    //         });\n    //     }\n    // }\n    value: function componentDidMount() {\n      //Get the configs\n      this.props.getConfigDump();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Col, {\n        lg: 4,\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"float-right\",\n        onClick: function onClick() {\n          return _this.props.history.push(\"/newdrive\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"New Config\"))), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"No.\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Delete\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(RemoteRows, {\n        remotes: this.props.remotes,\n        refreshHandle: this.props.getConfigDump,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ShowConfig;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    remotes: state.config.configDump,\n    hasError: state.config.hasError,\n    error: state.config.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getConfigDump: getConfigDump\n})(ShowConfig);","map":{"version":3,"sources":["/workspace/rclone-webui-react/src/views/ShowConfig/ShowConfig.js"],"names":["React","Button","Col","Row","Table","ConfigRow","connect","getConfigDump","RemoteRows","remotes","refreshHandle","returnMap","curKey","Object","entries","key","value","push","ShowConfig","props","history","PureComponent","mapStateToProps","state","config","configDump","hasError","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,KAA1B,QAAsC,YAAtC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;;AAGA,SAASC,UAAT,OAA8C;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,aAAgB,QAAhBA,aAAgB;AAE1C,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,qCAA2BC,MAAM,CAACC,OAAP,CAAeL,OAAf,CAA3B,qCAAoD;AAAA;;AAAA;;AAAA,QAAxCM,GAAwC;AAAA,QAAnCC,KAAmC;AAChDL,IAAAA,SAAS,CAACM,IAAV,CAAgB,oBAAC,SAAD;AAAW,MAAA,cAAc,EAAEL,MAA3B;AAAmC,MAAA,GAAG,EAAEG,GAAxC;AAA6C,MAAA,UAAU,EAAEA,GAAzD;AAA8D,MAAA,MAAM,EAAEC,KAAtE;AACW,MAAA,aAAa,EAAEN,aAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAEAE,IAAAA,MAAM;AACT;;AACD,SAAOD,SAAP;AACH;;IAGKO,U;;;;;;;;;;;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;wCAGoB;AAChB;AACA,WAAKC,KAAL,CAAWZ,aAAX;AACH;;;6BAEQ;AAAA;;AAGL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,SAAf;AAA0B,QAAA,SAAS,EAAE,aAArC;AACQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACY,KAAL,CAAWC,OAAX,CAAmBH,IAAnB,CAAwB,WAAxB,CAAN;AAAA,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAFJ,CADJ,EAWI,oBAAC,KAAD;AAAO,QAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CADA,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWV,OAAhC;AAAyC,QAAA,aAAa,EAAE,KAAKU,KAAL,CAAWZ,aAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAVJ,CAXJ,CADJ;AA6BH;;;;EArDoBP,KAAK,CAACqB,a;;AAwD/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9Bd,IAAAA,OAAO,EAAEc,KAAK,CAACC,MAAN,CAAaC,UADQ;AAE9BC,IAAAA,QAAQ,EAAEH,KAAK,CAACC,MAAN,CAAaE,QAFO;AAG9BC,IAAAA,KAAK,EAAEJ,KAAK,CAACC,MAAN,CAAaG;AAHU,GAAL;AAAA,CAA7B;;AAOA,eAAerB,OAAO,CAACgB,eAAD,EAAkB;AAACf,EAAAA,aAAa,EAAbA;AAAD,CAAlB,CAAP,CAA0CW,UAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport {Button, Col, Row, Table} from \"reactstrap\";\nimport ConfigRow from \"./ConfigRow\";\nimport {connect} from \"react-redux\";\nimport {getConfigDump} from \"../../actions/configActions\";\n\n\nfunction RemoteRows({remotes, refreshHandle}) {\n\n    let returnMap = [];\n    let curKey = 1;\n    for (const [key, value] of Object.entries(remotes)) {\n        returnMap.push((<ConfigRow sequenceNumber={curKey} key={key} remoteName={key} remote={value}\n                                   refreshHandle={refreshHandle}/>));\n        curKey++;\n    }\n    return returnMap;\n}\n\n\nclass ShowConfig extends React.PureComponent {\n\n\n    // async loadConfigDump() {\n    //     try {\n    //         let res = await axiosInstance.post(\"config/dump\");\n    //         this.setState({remotes: res.data});\n    //     } catch (e) {\n    //         console.log(`Error while processing request to get remote list ${e}`);\n    //         toast.error(`Error loading remotes list. ${e}`, {\n    //             autoClose: false\n    //         });\n    //     }\n    // }\n\n\n    componentDidMount() {\n        //Get the configs\n        this.props.getConfigDump();\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col lg={8}/>\n                    <Col lg={4} className={\"mb-3\"}>\n                        <Button color={\"primary\"} className={\"float-right\"}\n                                onClick={() => this.props.history.push(\"/newdrive\")}>\n                            New Config\n                        </Button>\n                    </Col>\n\n                </Row>\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>No.</th>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Update</th>\n                        <th>Delete</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <RemoteRows remotes={this.props.remotes} refreshHandle={this.props.getConfigDump}/>\n                    </tbody>\n                </Table>\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = state => ({\n    remotes: state.config.configDump,\n    hasError: state.config.hasError,\n    error: state.config.error\n\n});\n\nexport default connect(mapStateToProps, {getConfigDump})(ShowConfig);\n"]},"metadata":{},"sourceType":"module"}